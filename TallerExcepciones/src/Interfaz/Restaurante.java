/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import java.awt.Graphics;
import java.awt.Image;
import java.net.URL;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import mundo.Plato;
import mundo.accesoDB;
import mundo.tipoPlato;
import mundo.excepcionAniadirPlato;
import mundo.excepcionGenerarFactura;

/**
 *
 * @author Andom
 */
public class Restaurante extends javax.swing.JFrame {

    /**
     * Creates new form Restaurante
     */
    private String nombre= "";
    private int tiempoPreparacion=0;
    private int cantidad;
    private boolean esNuevaCompra= true;
    private ArrayList<Plato> platos= new ArrayList<Plato>();
    
    private accesoDB db= new accesoDB();
    
    public Restaurante() {
        initComponents();
        ImageIcon imagen= new ImageIcon("simbolo-mex.jpg");
        iconoComida.setIcon(new ImageIcon(imagen.getImage().getScaledInstance(184, 145,Image.SCALE_SMOOTH)));
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        listaMenu = new javax.swing.JComboBox<>();
        btnMenu = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        panelImg = new javax.swing.JPanel();
        iconoComida = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descripcion = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        unidadComprar = new javax.swing.JTextField();
        costo = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        add = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        mostrarInfo = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();
        generarFactura = new javax.swing.JButton();
        nuevaCompra = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 209, 78));
        setForeground(new java.awt.Color(255, 195, 20));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(240, 207, 21));
        jPanel1.setForeground(new java.awt.Color(221, 195, 66));

        jLabel1.setFont(new java.awt.Font("Kristen ITC", 1, 36)); // NOI18N
        jLabel1.setText("Domínguez ");

        jLabel2.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(235, 24, 59));
        jLabel2.setText("a lo mexicano");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel3.setText("\"Si la vida chiles no te quiere dar");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel5.setText("mejor ven y pruébalos en este lugar\"");

        jPanel2.setBackground(new java.awt.Color(175, 70, 70));
        jPanel2.setForeground(new java.awt.Color(175, 70, 70));

        listaMenu.setBackground(new java.awt.Color(255, 255, 102));
        listaMenu.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N
        listaMenu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione un plato", "Totopos", "Totopos gratinados con salsa", "Quesadillas", "Chile relleno de queso", "Nachos aztecas", "Nachos del DF", "Burros tradicionales", "Tacos al pastor", "Quesadillas monterrey", "Quesatacos", "Quesadillas postParcial", "Fajitas", "Chilaquiles", "Tequila surprise", "Cocacola", "Limonada de coco", "Limonada cerezada", "Margarita guadalupe", "Agua con gas" }));
        listaMenu.setBorder(null);
        listaMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaMenuActionPerformed(evt);
            }
        });

        btnMenu.setBackground(new java.awt.Color(0, 0, 0));
        btnMenu.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        btnMenu.setForeground(new java.awt.Color(255, 255, 255));
        btnMenu.setText("CRUD con base de datos");
        btnMenu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        btnMenu.setBorderPainted(false);
        btnMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Escoja su plato");

        panelImg.setBackground(new java.awt.Color(175, 70, 70));
        panelImg.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout panelImgLayout = new javax.swing.GroupLayout(panelImg);
        panelImg.setLayout(panelImgLayout);
        panelImgLayout.setHorizontalGroup(
            panelImgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(iconoComida, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
        );
        panelImgLayout.setVerticalGroup(
            panelImgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(iconoComida, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
        );

        descripcion.setEditable(false);
        descripcion.setColumns(20);
        descripcion.setLineWrap(true);
        descripcion.setRows(5);
        descripcion.setWrapStyleWord(true);
        jScrollPane1.setViewportView(descripcion);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Unidades a comprar");

        costo.setEditable(false);
        costo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                costoActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Costo");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Descripción plato");

        add.setBackground(new java.awt.Color(240, 207, 21));
        add.setFont(new java.awt.Font("Serif", 1, 12)); // NOI18N
        add.setForeground(new java.awt.Color(255, 0, 51));
        add.setText("Añadir");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        mostrarInfo.setEditable(false);
        mostrarInfo.setBackground(new java.awt.Color(255, 255, 204));
        mostrarInfo.setColumns(20);
        mostrarInfo.setLineWrap(true);
        mostrarInfo.setRows(5);
        jScrollPane2.setViewportView(mostrarInfo);

        jLabel10.setFont(new java.awt.Font("Georgia", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Tu carrito de compras");

        generarFactura.setBackground(new java.awt.Color(240, 207, 21));
        generarFactura.setFont(new java.awt.Font("Serif", 1, 12)); // NOI18N
        generarFactura.setForeground(new java.awt.Color(255, 0, 51));
        generarFactura.setText("Generar Factura");
        generarFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarFacturaActionPerformed(evt);
            }
        });

        nuevaCompra.setBackground(new java.awt.Color(240, 207, 21));
        nuevaCompra.setFont(new java.awt.Font("Serif", 1, 12)); // NOI18N
        nuevaCompra.setText("Nueva compra");
        nuevaCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevaCompraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(panelImg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(btnMenu)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(costo, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addComponent(unidadComprar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(listaMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(50, 50, 50))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(add)
                        .addGap(157, 157, 157))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(261, 261, 261)
                        .addComponent(jLabel10))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(203, 203, 203)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(generarFactura)
                                .addGap(44, 44, 44)
                                .addComponent(nuevaCompra)
                                .addGap(58, 58, 58))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(listaMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(btnMenu))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(panelImg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(unidadComprar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(costo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addComponent(jLabel9)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(add)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(generarFactura)
                    .addComponent(nuevaCompra))
                .addGap(28, 28, 28))
        );

        jPanel3.setBackground(new java.awt.Color(175, 70, 70));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(jLabel2)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addGap(108, 108, 108))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addComponent(jLabel3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(735, 735, 735)
                .addComponent(jLabel4)
                .addGap(0, 81, Short.MAX_VALUE))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listaMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaMenuActionPerformed
        String prodSeleccion= (String) listaMenu.getSelectedItem();
        nombre= prodSeleccion;
        printDescripciónYCosto(prodSeleccion);
        
    }//GEN-LAST:event_listaMenuActionPerformed

    private void btnMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuActionPerformed
        Menu menu= new Menu();
        menu.setVisible(true);
        menu.setLocationRelativeTo(this);
    }//GEN-LAST:event_btnMenuActionPerformed

    private void costoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_costoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_costoActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        
        cantidad= 0;
        try{
            if(nombre.equals("Seleccione un plato") || nombre.equals("")){ 
                throw new excepcionAniadirPlato("Selecciona algo del menú antes de añadir un plato en tu carrito de compras.");
            }else if(unidadComprar.getText().equals("")){
                 throw new excepcionAniadirPlato("Añade información en unidades a comprar, no lo dejes vacío.");
            }
            
            cantidad= Integer.parseInt(unidadComprar.getText());
            costoQueIngresa();
            
            if(esNuevaCompra){
                generarFactura.setEnabled(true);
                if(cantidad > 5){
                      throw new excepcionAniadirPlato("Lo lamentamos, únicamente podés comprar 5 unidades de un mismo plato.");  
                }else if(isCantidadDeUnPlatoYaAniadidoMayorA5(cantidad)){
                      String nombre= this.nombre;
                      ponerEnBlanco();
                      unidadComprar.setText("");
                      throw new excepcionAniadirPlato("Lo lamentamos, ya de " + nombre + " encargaste 5 unidades. " + 
                              "\no la cantidad que escribió sobrepasa junto al plato ya añadido con anterioridad" +" \nlas 5 unidades que puedes comprar de un plato.");  
                }else{
                    
                    try{
                        if(precioHastaElMomentoAnadiendoNuevo()> 200000){
                            throw new excepcionAniadirPlato("No es normal gastar tanto en un almuerzo, quizá se equivocó. " + "\nAñadiendo el nuevo plato"
                                    + " su total a pagar sería de " + precioHastaElMomentoAnadiendoNuevo()+ " \nPor lo tanto,  genere factura sin añadir la cantidad del último plato que seleccionó o "
                                    + "\nagregue un plato que no sume en total > 200mil, tiene disponible para comprar: " + (200000-precioHastaElMomento()) + " pesos.");
                        }else{
                          aniadirAlCarroDeCompras(cantidad);
                          ponerEnBlanco();
                          unidadComprar.setText("");
                        }
                    }catch(excepcionAniadirPlato excep){
                        JOptionPane.showMessageDialog(this, excep.getMessage());
                    }
                     
                }
            }else{
                ponerEnBlanco();
                unidadComprar.setText("");
                throw new excepcionAniadirPlato("Presiona el botón: Nueva compra, para poder comprar nuevamente");  
            }
        }catch(excepcionAniadirPlato excep){
            JOptionPane.showMessageDialog(this, excep.getMessage());
        }catch(NumberFormatException excep){
            JOptionPane.showMessageDialog(this, "Ingrese un valor válido, es decir: " + "\nuna cantidad como número entero");
            unidadComprar.setText("");
        }
        
       
    }//GEN-LAST:event_addActionPerformed

    private void generarFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarFacturaActionPerformed
        try{
            if(mostrarInfo.getText().equals("")){
               throw new excepcionGenerarFactura("Por favor, primero seleccione un plato antes de generar factura");
            }else{
                if(hayBebidad()){
                       mostrarInfo.setText(generarInfoAMostrar() + "\nPrecio total a pagar: " + precioHastaElMomento() +"\nSu pedido demora unos " +
                               totalTiempoPreparacion() + " minutos");
                       ponerEnBlanco();
                       unidadComprar.setText("");
                       vaciarListaPlatos();
                       esNuevaCompra= false;
                       generarFactura.setEnabled(false);  


                }else{
                    if(precioHastaElMomento()< 190000){ //se realiza esta validación para saber si puede seguir agregando en su carrito de compras,
                        //o debe empezar una nueva compra para que el precio con la bebida no sobrepase de 200 mil
                         ponerEnBlanco();
                         unidadComprar.setText("");
                         throw new excepcionGenerarFactura("¿QUE ENFERMO COME SIN BEBIDA? seleccione una bebida y vuelva a generar factura.");
                    }else{
                        ponerEnBlanco();
                        vaciarListaPlatos();
                        unidadComprar.setText("");
                        mostrarInfo.setText("");
                        throw new excepcionGenerarFactura("Realice todo el proceso de venta nuevamente.\nNo compró ninguna bebida y el valor agregando de la bebida rebasa los 200 mil");
                        
                    }

                }
            }

        }catch(excepcionGenerarFactura excep){
            JOptionPane.showMessageDialog(this, excep.getMessage());
        }
    }//GEN-LAST:event_generarFacturaActionPerformed

    private void nuevaCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevaCompraActionPerformed
        esNuevaCompra= true;
        mostrarInfo.setText("");
        ponerEnBlanco();
        unidadComprar.setText("");
        vaciarListaPlatos();
    }//GEN-LAST:event_nuevaCompraActionPerformed
    
    public void aniadirAlCarroDeCompras(int cantidad){
        tipoPlato tipo= obtenerTipoPlato(nombre); //valor predeterminado
        Plato plato_a_aniadir= new Plato(nombre, descripcion.getText(), Double.parseDouble(costo.getText()), tiempoPreparacion, tipo, cantidad);
        platos.add(plato_a_aniadir);
        mostrarInfo();
    }
    public void mostrarInfo(){
        mostrarInfo.setText(generarInfoAMostrar() + "\nHasta ahora debe pagar un total de: " + precioHastaElMomento());
    }
    
    public String generarInfoAMostrar(){
        String info= "";
        int contador= 1;
        for (Plato plato : platos) {
            info+= "--------------------------------   Plato  #" + contador + " -------------------------------------- \n" + plato.obtenerInfo() + "\n";
            contador++;
        }
        return info;
    }
    
    public double precioHastaElMomento(){
        double precio= 0.0;
        for (Plato plato : platos) {
            precio+= plato.precioPlato();
        }
        return precio;
    }
    
    public int totalTiempoPreparacion(){
        int tiempoPrep= 0;
        for (Plato plato : platos) {
            tiempoPrep+= plato.getTiempoPreparacion();
        }
        return tiempoPrep;
    }
    
    public double precioHastaElMomentoAnadiendoNuevo(){
        return precioHastaElMomento()+ costoQueIngresa();
    }
    
    public double costoQueIngresa(){
        return Double.parseDouble(costo.getText())*cantidad;
    }
    
    //este método evalúa la cantidad encargada de un plato que ya fue encargado: es decir
    //si un cliente seleccionó unos totopos y pidió una cantidad de 5 de éste al añadirlo al carro de compras, si
    //vuelve en otra selección de plato a elegir el mismo plato, se le prohibirá hacerlo porque ya pidió una cantidad de 5.
    public boolean isCantidadDeUnPlatoYaAniadidoMayorA5(int cant){
        int cantidad= cant;
        for (Plato plato : platos) {
            if(plato.getNombre().equals(nombre)){
                cantidad+= plato.getCantidad();
            }
        }
        if(cantidad > 5){
            return true;
        }
        
        return false;
    }
    
    public void ponerEnBlanco(){
        listaMenu.setSelectedIndex(0); 
        costo.setText("");
        descripcion.setText(""); 
    }
    
    public void vaciarListaPlatos(){
        platos.clear();
    }
    
    public boolean hayBebidad(){
        for (Plato plato : platos) {
            if(plato.getTipoPlato().toString().equals("bebida")){
                return true;
            }
        }
        return false;
    }
    
    
    public tipoPlato obtenerTipoPlato(String plato){
        tipoPlato tipo= tipoPlato.entrada; //valor predeterminado
        if(plato.equals("Totopos") || plato.equals("Totopos gratinados con salsa") ||
           plato.equals("Quesadillas") || plato.equals("Chile relleno de queso")){
            
            tipo= tipoPlato.entrada;
            
        }else if(plato.equals("Nachos aztecas") || plato.equals("Nachos del DF") ||
                plato.equals("Burros tradicionales") || plato.equals("Tacos al pastor") || plato.equals("Quesadillas monterrey")
                || plato.equals("Quesatacos") || plato.equals("Quesadillas postParcial") || plato.equals("Fajitas") || plato.equals("Chilaquiles")){
            
            tipo= tipoPlato.plato_fuerte;
            
        }else if(plato.equals("Tequila surprise") || plato.equals("Cocacola") || plato.equals("Limonada de coco") ||
                plato.equals("Limonada cerezada") || plato.equals("Margarita guadalupe") || plato.equals("Agua con gas")){
            
            tipo= tipoPlato.bebida;
        }
        
        return tipo;
    }
    public void printDescripciónYCosto(String str){
        switch(str){
            case "Totopos": 
                descripcion.setText("\nTriángulos de maíz con  guacamole, salsa de queso y salsa picante");
                costo.setText("5600");
                tiempoPreparacion= 30;
                break;
            case "Totopos gratinados con salsa":
                descripcion.setText("\nTriángulos de maíz gratinados con queso, salsa picante y salsa de queso");
                tiempoPreparacion= 35;
                costo.setText("9000");
                break;
            case "Quesadillas": 
                descripcion.setText("\nQuesadillas rellena de queso partidas en 10 mini porciones");
                costo.setText("7500");
                tiempoPreparacion= 25;
                break;
            case "Chile relleno de queso": 
                descripcion.setText("\nChiles rellenos de queso con frijoles");
                tiempoPreparacion= 25;
                costo.setText("10000");
                break;
            case "Nachos aztecas": 
                descripcion.setText("\nCarne asada, pollo, carnitas de cerdo y chorizo con triángulos de maíz");
                tiempoPreparacion= 60;
                costo.setText("15000");
                break;
            case "Nachos del DF": 
                descripcion.setText("\nCarne molida, pollo y chorizo chamoy con triángulos de maíz. Incluye salsa a base de flor de Jamaica y tamarindo agridulce");
                tiempoPreparacion= 60;
                costo.setText("16000");
                break;
            case "Burros tradicionales": 
                descripcion.setText("\nlechuga, ensalada de guacamole, salsa ranchera, salsa de queso y frijol refrito");
                tiempoPreparacion= 50;
                costo.setText("11000");
                break;
            case "Tacos al pastor":
                descripcion.setText("\n3 tortillas de maíz, cerdo al pastor con cebolla, cilantro salsa ranchera y piña asada");
                tiempoPreparacion= 45;
                costo.setText("14000");
                break;
            case "Quesadillas monterrey": 
                descripcion.setText("\nQuesadillas con carne y pollo guisado a la mexicana");
                tiempoPreparacion= 40;
                costo.setText("15000");
                break;
            case "Quesatacos": 
                descripcion.setText("\n3 tortilas de maíz rellenas de pollo, res y cerdo " + "\n con queso fundido");
                tiempoPreparacion= 55;
                costo.setText("13000");
                break;
            case "Quesadillas postParcial": 
                descripcion.setText("\n \nQuesadillas especial de la casa con extra picor");
                tiempoPreparacion= 55;
                costo.setText("21000");
                break;
            case "Fajitas": 
                descripcion.setText("\nVegetales a la plancha con carne, pollo, chorizo y cerdo acompañado de frijol refrito, arroz rojo, totopos gratinados y  5 tortillas de maíz");
                tiempoPreparacion= 70;
                costo.setText("19500");
                break;
            case "Chilaquiles": 
                descripcion.setText("\nTriángulos de maíz con queso fundido, carne y pollo");
                tiempoPreparacion= 40;
                costo.setText("15000");
                break;
            case "Tequila surprise": 
                descripcion.setText("\n \n Zumo de naranja, tequila y jarabe de granadina");
                tiempoPreparacion= 5;
                costo.setText("16500");
                break;
            case "Cocacola": 
                descripcion.setText("\n \n Cocacola 350 ml");
                tiempoPreparacion= 0;
                costo.setText("3500");
                break;
            case "Limonada de coco": 
                descripcion.setText("\n \n Limonada de coco");
                tiempoPreparacion= 5;
                costo.setText("7000");
                break;
            case "Limonada cerezada": 
                descripcion.setText("\n \n Cerezada (no apta para quienes se ostigan rápido)");
                tiempoPreparacion= 5;
                costo.setText("6000");
                break;
            case "Margarita guadalupe": 
                descripcion.setText("\n \n Tequila, triple sec. fresa michelada en tajín");
                tiempoPreparacion= 5;
                costo.setText("13500");
                break;
            case "Agua con gas": 
                descripcion.setText("\n \n Agua con gas savorizada (limón o taranja)");
                tiempoPreparacion=0;
                costo.setText("4000");
                break;
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Restaurante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Restaurante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Restaurante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Restaurante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Restaurante().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JButton btnMenu;
    private javax.swing.JTextField costo;
    private javax.swing.JTextArea descripcion;
    private javax.swing.JButton generarFactura;
    private javax.swing.JLabel iconoComida;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> listaMenu;
    private javax.swing.JTextArea mostrarInfo;
    private javax.swing.JButton nuevaCompra;
    private javax.swing.JPanel panelImg;
    private javax.swing.JTextField unidadComprar;
    // End of variables declaration//GEN-END:variables
}
